From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Palmer Dabbelt <palmerdabbelt@google.com>
Date: Tue, 12 Jan 2021 11:24:38 -0800
Subject: ANDROID: dm-user: Add some missing static

I forgot to add static to a handful of dm-user function declarations.
Not sure how I missed these warnings the other times, but the 0-day
robot found them on android-mainline.

Reported-by: kernel test robot <lkp@intel.com>
Test: none
Fixes: 83bf345abc0b ("ANDROID: dm: dm-user: New target that proxies BIOs to userspace")
Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
Change-Id: If9cb2de117ff402c86902d0d2d6a2f0e28614c54
---
 drivers/md/dm-user.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/md/dm-user.c b/drivers/md/dm-user.c
--- a/drivers/md/dm-user.c
+++ b/drivers/md/dm-user.c
@@ -522,7 +522,7 @@ static struct message *msg_get_from_user(struct channel *c, u64 seq)
 	return NULL;
 }
 
-void message_kill(struct message *m, mempool_t *pool)
+static void message_kill(struct message *m, mempool_t *pool)
 {
 	m->bio->bi_status = BLK_STS_IOERR;
 	bio_endio(m->bio);
@@ -536,12 +536,12 @@ void message_kill(struct message *m, mempool_t *pool)
  * When called without the lock it may spuriously indicate there is remaining
  * work, but when called with the lock it must be accurate.
  */
-int target_poll(struct target *t)
+static int target_poll(struct target *t)
 {
 	return !list_empty(&t->to_user) || t->dm_destroyed;
 }
 
-void target_release(struct kref *ref)
+static void target_release(struct kref *ref)
 {
 	struct target *t = container_of(ref, struct target, references);
 	struct list_head *cur;
@@ -562,7 +562,7 @@ void target_release(struct kref *ref)
 	kfree(t);
 }
 
-void target_put(struct target *t)
+static void target_put(struct target *t)
 {
 	/*
 	 * This both releases a reference to the target and the lock.  We leave
@@ -575,7 +575,7 @@ void target_put(struct target *t)
 		mutex_unlock(&t->lock);
 }
 
-struct channel *channel_alloc(struct target *t)
+static struct channel *channel_alloc(struct target *t)
 {
 	struct channel *c;
 
@@ -593,7 +593,7 @@ struct channel *channel_alloc(struct target *t)
 	return c;
 }
 
-void channel_free(struct channel *c)
+static void channel_free(struct channel *c)
 {
 	struct list_head *cur;
 
