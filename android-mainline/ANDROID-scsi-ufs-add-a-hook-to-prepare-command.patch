From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jaegeuk Kim <jaegeuk@google.com>
Date: Wed, 16 Sep 2020 10:59:18 -0700
Subject: ANDROID: scsi: ufs: add a hook to prepare command

This patch adds one variant in UFS driver:

void    (*prepare_command)(struct ufs_hba *hba,
                        struct request *rq, struct ufshcd_lrb *lrbp);
 -> called in the beginning of queuecommand to update the request, if needed

Bug: 158050260
Signed-off-by: Jaegeuk Kim <jaegeuk@google.com>
Change-Id: Ib91a735c2cbd215c1854ff57ef9a92642c41e005
---
 drivers/scsi/ufs/ufshcd.c |  2 ++
 drivers/scsi/ufs/ufshcd.h | 10 ++++++++++
 2 files changed, 12 insertions(+)

diff --git a/drivers/scsi/ufs/ufshcd.c b/drivers/scsi/ufs/ufshcd.c
--- a/drivers/scsi/ufs/ufshcd.c
+++ b/drivers/scsi/ufs/ufshcd.c
@@ -2594,6 +2594,8 @@ static int ufshcd_queuecommand(struct Scsi_Host *host, struct scsi_cmnd *cmd)
 	lrbp->lun = ufshcd_scsi_to_upiu_lun(cmd->device->lun);
 	lrbp->intr_cmd = !ufshcd_is_intr_aggr_allowed(hba) ? true : false;
 
+	ufshcd_vops_prepare_command(hba, cmd->request, lrbp);
+
 	ufshcd_prepare_lrbp_crypto(cmd->request, lrbp);
 
 	lrbp->req_abort_skip = false;
diff --git a/drivers/scsi/ufs/ufshcd.h b/drivers/scsi/ufs/ufshcd.h
--- a/drivers/scsi/ufs/ufshcd.h
+++ b/drivers/scsi/ufs/ufshcd.h
@@ -326,6 +326,7 @@ struct ufs_pwr_mode_info {
  * @event_notify: called to notify important events
  * @fill_prdt: called after initializing the standard PRDT fields so that any
  *	       variant-specific PRDT fields can be initialized too
+ * @prepare_command: called when receiving a request in the first place
  */
 struct ufs_hba_variant_ops {
 	const char *name;
@@ -364,6 +365,8 @@ struct ufs_hba_variant_ops {
 				enum ufs_event_type evt, void *data);
 	int	(*fill_prdt)(struct ufs_hba *hba, struct ufshcd_lrb *lrbp,
 			     unsigned int segments);
+	void    (*prepare_command)(struct ufs_hba *hba,
+				struct request *rq, struct ufshcd_lrb *lrbp);
 };
 
 /* clock gating state  */
@@ -1282,6 +1285,13 @@ static inline int ufshcd_vops_fill_prdt(struct ufs_hba *hba,
 	return 0;
 }
 
+static inline void ufshcd_vops_prepare_command(struct ufs_hba *hba,
+		struct request *rq, struct ufshcd_lrb *lrbp)
+{
+	if (hba->vops && hba->vops->prepare_command)
+		hba->vops->prepare_command(hba, rq, lrbp);
+}
+
 extern struct ufs_pm_lvl_states ufs_pm_lvl_states[];
 
 /*
