From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@google.com>
Date: Wed, 29 Jan 2020 19:20:44 +0100
Subject: Revert "ANDROID: sched/fair: EAS: Add uclamp support to
 find_energy_efficient_cpu()"

This reverts commit b61876ed122f816660fe49e0de1b7ee4891deaa2.

It was merged differently upstream in the 5.6-rc1 merge window so revert
this version as upstream got a different one.

Cc: Patrick Bellasi <patrick.bellasi@arm.com>
Cc: Quentin Perret <quentin.perret@arm.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
Change-Id: I508fd204109f0f947ede40a44116ad51e5631b64
---
 kernel/sched/fair.c | 17 -----------------
 1 file changed, 17 deletions(-)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index 43382049f80e..f5ba60b24822 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -5946,19 +5946,6 @@ static int select_idle_sibling(struct task_struct *p, int prev, int target)
 	return target;
 }
 
-static unsigned int uclamp_task_util(struct task_struct *p)
-{
-#ifdef CONFIG_UCLAMP_TASK
-	unsigned int min_util = uclamp_eff_value(p, UCLAMP_MIN);
-	unsigned int max_util = uclamp_eff_value(p, UCLAMP_MAX);
-	unsigned int est_util = task_util_est(p);
-
-	return clamp(est_util, min_util, max_util);
-#else
-	return task_util_est(p);
-#endif
-}
-
 /**
  * Amount of capacity of a CPU that is (estimated to be) used by CFS tasks
  * @cpu: the CPU to get the utilization of
@@ -6328,10 +6315,6 @@ static int find_energy_efficient_cpu(struct task_struct *p, int prev_cpu, int sy
 			if (!fits_capacity(util, cpu_cap))
 				continue;
 
-			/* Skip CPUs which do not fit task requirements */
-			if (cpu_cap < uclamp_task_util(p))
-				continue;
-
 			/* Always use prev_cpu as a candidate. */
 			if (!latency_sensitive && cpu == prev_cpu) {
 				prev_delta = compute_energy(p, prev_cpu, pd);
